steps:
- powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
  displayName: Add conda to PATH
- script: conda create --yes --quiet --name myEnvironment
  displayName: Create Anaconda environment
- script: |
    call activate myEnvironment
    conda install --yes --quiet --name myEnvironment python=3.7 numpy pytest
    conda install --yes --quiet --name myEnvironment -c anaconda swig git wget
    conda install --yes --quiet --name myEnvironment -c conda-forge proj
  displayName: Install conda packages
- script: |
    call activate myEnvironment
    cinst -y --no-progress 7zip
    cd $(Build.BinariesDirectory)
    wget -q http://download.gisinternals.com/sdk/downloads/${{parameters.sdk}}-dev.zip
    7z x ${{parameters.sdk}}-dev.zip
    rm ${{parameters.sdk}}/include/gdal*.h
    rm ${{parameters.sdk}}/lib/gdal_i.lib
    rm ${{parameters.sdk}}/include/ogr*.h
  displayName: Install sdk
- script: |
    call activate myEnvironment
    git clone https://github.com/osgeo/gdal.git
    ln -s $(Build.SourcesDirectory) $(Build.BinariesDirectory)/gdal/cmake4gdal
    python $(Build.BinariesDirectory)/gdal/cmake4gdal/deploy.py
  workingDirectory: '$(Build.BinariesDirectory)'
- task: CMake@1
  displayName: configure gdal
  inputs:
    workingDirectory: '$(Build.BinariesDirectory)/build'
    cmakeArgs: -G "${{ parameters.generator }}" -DPROJ_ROOT=$env:CONDA\Library ${{ parameters.CMAKE_OPTIONS }} -C ${{ parameters.CONFIGURATIONS }} $(Build.SourcesDirectory)
- task: CMake@1
  displayName: build gdal
  inputs:
    workingDirectory: '$(Build.BinariesDirectory)/build'
    cmakeArgs: --build . --config Release
- task: CMake@1
  displayName: run quicktest
  inputs:
    workingDirectory: '$(Build.BinariesDirectory)/build'
    cmakeArgs: --build . --config Release --target quicktest
- task: CMake@1
  displayName: run autotest
  inputs:
    workingDirectory: '$(Build.BinariesDirectory)/build'
    cmakeArgs: --build . --target autotest

# MinGW build template
steps:
- bash: |
    sudo $(Build.SourcesDirectory)/gdal/ci/azure-pipelines/linux-install.sh
    sudo $(Build.SourcesDirectory)/gdal/ci/azure-pipelines/mingw-install.sh
  displayName: install dependencies
- task: CMake@1
  displayName: configure
  inputs:
    workingDirectory: '$(Build.BinariesDirectory)/build'
    cmakeArgs: -DCMAKE_CXX_COMPILER=${{parameters.CXX}} -DCMAKE_C_COMPILER=${{parameters.CC}} -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=$(Build.SourcesDirectory)/cmake/platforms/mingw-w64-linux.toolchain.cmake -C$(Build.SourcesDirectory)/cmake/configurations/mingw.cmake -DGDAL_USE_LIBTIFF_INTERNAL=ON -DSWIG_PYTHON=OFF $(Build.SourcesDirectory)
- task: CMake@1
  displayName: build gdal
  inputs:
    workingDirectory: '$(Build.BinariesDirectory)/build'
    cmakeArgs: --build $(Build.BinariesDirectory)/build --target gdal
- bash: ln -sf $(Build.BinariesDirectory)/build/gdal/libgdal.dll $HOME/.wine/drive_c/windows
- task: CMake@1
  displayName: build all
  inputs:
    workingDirectory: '$(Build.BinariesDirectory)/build'
    cmakeArgs: --build $(Build.BinariesDirectory)/build
- bash: wine $(Build.BinariesDirectory)/build/gdal/apps/gdalinfo.exe --version
- task: CMake@1
  displayName: run quicktest
  inputs:
    workingDirectory: '$(Build.BinariesDirectory)/build'
    cmakeArgs: --build  $(Build.BinariesDirectory)/build --target quicktest